package ClasesNaruto;

import java.sql.*;

public class BaseDatos {
    private static final String DB_URL = "jdbc:sqlite:juego.db";

    public BaseDatos() {
        crearTablas();
    }

    private void crearTablas() {
        try (Connection conn = DriverManager.getConnection(DB_URL)) {
            Statement stmt = conn.createStatement();

            String usuarios = """
                CREATE TABLE IF NOT EXISTS usuarios (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    nombre TEXT UNIQUE NOT NULL,
                    contrasena TEXT NOT NULL
                );
            """;

            String puntuaciones = """
                CREATE TABLE IF NOT EXISTS puntuaciones (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    usuario_id INTEGER,
                    puntos INTEGER,
                    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
                );
            """;

            stmt.execute(usuarios);
            stmt.execute(puntuaciones);

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public boolean registrarUsuario(String nombre, String contrasena) {
        String sql = "INSERT INTO usuarios(nombre, contrasena) VALUES(?, ?)";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, nombre);
            pstmt.setString(2, contrasena);
            pstmt.executeUpdate();
            return true;

        } catch (SQLException e) {
            if (e.getMessage().contains("UNIQUE")) {
                System.out.println("Ese nombre de usuario ya existe.");
            } else {
                e.printStackTrace();
            }
            return false;
        }
    }

    public int login(String nombre, String contrasena) {
        String sql = "SELECT id FROM usuarios WHERE nombre = ? AND contrasena = ?";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setString(1, nombre);
            pstmt.setString(2, contrasena);
            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                return rs.getInt("id");
            } else {
                return -1;
            }

        } catch (SQLException e) {
            e.printStackTrace();
            return -1;
        }
    }

    public void guardarPuntuacion(int usuarioId, int puntos) {
        String sql = "INSERT INTO puntuaciones(usuario_id, puntos) VALUES(?, ?)";
        try (Connection conn = DriverManager.getConnection(DB_URL);
             PreparedStatement pstmt = conn.prepareStatement(sql)) {

            pstmt.setInt(1, usuarioId);
            pstmt.setInt(2, puntos);
            pstmt.executeUpdate();

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void mostrarTop() {
        String sql = """
            SELECT u.nombre, SUM(p.puntos) AS total
            FROM puntuaciones p
            JOIN usuarios u ON p.usuario_id = u.id
            GROUP BY p.usuario_id
            ORDER BY total DESC
            LIMIT 3;
        """;

        try (Connection conn = DriverManager.getConnection(DB_URL);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            System.out.println("\n--- TOP 3 JUGADORES ---");
            while (rs.next()) {
                System.out.println(rs.getString("nombre") + ": " + rs.getInt("total") + " puntos");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void mostrarMejorJugador() {
        String sql = """
            SELECT u.nombre, SUM(p.puntos) AS total
            FROM puntuaciones p
            JOIN usuarios u ON p.usuario_id = u.id
            GROUP BY p.usuario_id
            ORDER BY total DESC
            LIMIT 1;
        """;

        try (Connection conn = DriverManager.getConnection(DB_URL);
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                System.out.println("\n--- MEJOR JUGADOR ---");
                System.out.println(rs.getString("nombre") + ": " + rs.getInt("total") + " puntos");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
